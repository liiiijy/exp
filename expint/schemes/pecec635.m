function [u, v, a, b, c] = pecec635(z, problem)
% PECEC635 - Order 6 exponential general linear method 
%            with s=3 stages and r=5 outputs.
% 
% SYNOPSIS:
%   [u, v, a, b, c] = pecec635(z, problem);
%
% PARAMETERS:
%   z       - Evaluation point (h * linear operator)
%   problem - Problem dependent parameter structure.
%
% RETURNS:
%   u   - The u_ij(z) coefficient functions as a 3-by-5 cell array.
%   a   - The a_ij(z) coefficient functions as a 3-by-3 cell array.
%   v   - The v_ij(z) coefficient function  as a 5-by-5 cell array.
%   b   - The b_ij(z) coefficient functions as a 5-by-3 cell array.
%   c   - The quadrature nodes as a 3-by-1 DOUBLE array.

% This file is part of the 'Expint'-package, 
% see http://www.math.ntnu.no/num/expint/
%
% $Revision: 1.2 $ $Date: 2005/10/10 07:22:12 $

[one, ez2, ez, z] = oneez2(z);

[phi_1, phi_2, phi_3, phi_4, phi_5, phi_6] = phipade(z, 6, 13);

u = { one, [], [], [], []; ...
      ez, -4*phi_2 - 26/3*phi_3 - 9*phi_4 - 4*phi_5, ...
      3*phi_2 + 19/2*phi_3 + 12*phi_4 + 6*phi_5, ...
      -4/3*phi_2 - 14/3*phi_3 - 7*phi_4 - 4*phi_5, ...
      1/4*phi_2 + 11/12*phi_3 + 3/2*phi_4 + phi_5; ...
      ez, -2*phi_2 - 1/3*phi_3 + 17/2*phi_4 + 16*phi_5 + 10*phi_6, ...
      phi_2 + 7/6*phi_3 - 11/2*phi_4 - 14*phi_5 - 10*phi_6, ...
      -1/3*phi_2 - 1/2*phi_3 + 7/4*phi_4 + 6*phi_5 + 5*phi_6, ...
      1/20*phi_2 + 1/12*phi_3 - 1/4*phi_4 - phi_5 - phi_6 };

a = {                                                    [],  [],  []; ...
      phi_1 + 25/12*phi_2 + 35/12*phi_3 + 5/2*phi_4 + phi_5,  [],  []; ...
      phi_1 + 13/12*phi_2 - 5/4*phi_3 - 25/4*phi_4 - 9*phi_5 - 5*phi_6, ...
             1/5*phi_2 + 5/6*phi_3 + 7/4*phi_4 + 2*phi_5 + phi_6,  [] };

v = { ez, -2*phi_2 - 1/3*phi_3 + 17/2*phi_4 + 16*phi_5 + 10*phi_6, ...
      phi_2 + 7/6*phi_3 - 11/2*phi_4 - 14*phi_5 - 10*phi_6, ...
      -1/3*phi_2 - 1/2*phi_3 + 7/4*phi_4 + 6*phi_5 + 5*phi_6, ...
      1/20*phi_2 + 1/12*phi_3 - 1/4*phi_4 - phi_5 - phi_6; ...
      [],  [],  [],  [],  []; ...
      [], one,  [],  [],  []; ...
      [],  [], one,  [],  []; ...
      [],  [],  [], one,  [] }; 

b = { phi_1 + 13/12*phi_2 - 5/4*phi_3 - 25/4*phi_4 - 9*phi_5 - 5*phi_6, ...
      [], 1/5*phi_2 + 5/6*phi_3 + 7/4*phi_4 + 2*phi_5 + phi_6; ...
      one, [], []; ...
       [], [], []; ...
       [], [], []; ...
       [], [], [] };

c = [ 0; 1; 1 ];
