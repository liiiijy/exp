function [u, v, a, b, c] = pecec736(z, problem)
% PECEC736 - Order 7 exponential general linear method 
%            with s=3 stages and r=6 outputs.
% 
% SYNOPSIS:
%   [u, v, a, b, c] = pecec736(z, problem);
%
% PARAMETERS:
%   z       - Evaluation point (h * linear operator)
%   problem - Problem dependent parameter structure.
%
% RETURNS:
%   u   - The u_ij(z) coefficient functions as a 3-by-6 cell array.
%   a   - The a_ij(z) coefficient functions as a 3-by-3 cell array.
%   v   - The v_ij(z) coefficient function  as a 6-by-6 cell array.
%   b   - The b_ij(z) coefficient functions as a 6-by-3 cell array.
%   c   - The quadrature nodes as a 3-by-1 DOUBLE array.

% This file is part of the 'Expint'-package, 
% see http://www.math.ntnu.no/num/expint/
%
% $Revision: 1.2 $ $Date: 2005/10/10 07:22:12 $

[one, ez2, ez, z] = oneez2(z);

[phi_1, phi_2, phi_3, phi_4, phi_5, phi_6, phi_7] = phipade(z, 7, 13);

u = { one, [], [], [], [], []; ...
      ez, ...
     -5*phi_2 - 77/6*phi_3 - 71/4*phi_4 - 14*phi_5 - 5*phi_6, ...
      5*phi_2 + 107/6*phi_3 + 59/2*phi_4 + 26*phi_5 + 10*phi_6, ...
     -10/3*phi_2 - 13*phi_3 - 49/2*phi_4 - 24*phi_5 - 10*phi_6, ...
      5/4*phi_2 + 61/12*phi_3 + 41/4*phi_4 + 11*phi_5 + 5*phi_6, ...
     -1/5*phi_2 - 5/6*phi_3 - 7/4*phi_4 - 2*phi_5 - phi_6; ...
      ez, ... 
     -5/2*phi_2 - 17/12*phi_3 + 83/8*phi_4 + 57/2*phi_5 + 65/2*phi_6 + 15*phi_7, ...
      5/3*phi_2 + 47/18*phi_3 - 8*phi_4 - 92/3*phi_5 - 40*phi_6 - 20*phi_7, ...
     -5/6*phi_2 - 19/12*phi_3 + 29/8*phi_4 + 37/2*phi_5 + 55/2*phi_6 + 15*phi_7, ...
      1/4*phi_2 + 31/60*phi_3 - phi_4 - 6*phi_5 - 10*phi_6 - 6*phi_7, ...
     -1/30*phi_2 - 13/180*phi_3 + 1/8*phi_4 + 5/6*phi_5 + 3/2*phi_6 + phi_7 };

a = { [],  [],  []; ...
      phi_1 + 137/60*phi_2 + 15/4*phi_3 + 17/4*phi_4 + 3*phi_5 + phi_6, ...
      [],  []; ...
      phi_1 + 77/60*phi_2 - 49/60*phi_3 - 7*phi_4 - 14*phi_5 - 14*phi_6 - 6*phi_7, ...
      1/6*phi_2 + 137/180*phi_3 + 15/8*phi_4 + 17/6*phi_5 + 5/2*phi_6 + phi_7, ...
      [] };

v = { ez, ... 
     -5/2*phi_2 - 17/12*phi_3 + 83/8*phi_4 + 57/2*phi_5 + 65/2*phi_6 + 15*phi_7, ...
      5/3*phi_2 + 47/18*phi_3 - 8*phi_4 - 92/3*phi_5 - 40*phi_6 - 20*phi_7, ...
     -5/6*phi_2 - 19/12*phi_3 + 29/8*phi_4 + 37/2*phi_5 + 55/2*phi_6 + 15*phi_7, ...
      1/4*phi_2 + 31/60*phi_3 - phi_4 - 6*phi_5 - 10*phi_6 - 6*phi_7, ... 
     -1/30*phi_2 - 13/180*phi_3 + 1/8*phi_4 + 5/6*phi_5 + 3/2*phi_6 + phi_7; ... 
      [],  [],  [],  [],  [],  []; ...
      [], one,  [],  [],  [],  []; ...
      [],  [], one,  [],  [],  []; ...
      [],  [],  [], one,  [],  [];
      [],  [],  [],  [], one,  [] }; 

b = { phi_1 + 77/60*phi_2 - 49/60*phi_3 - 7*phi_4 - 14*phi_5 - 14*phi_6 - 6*phi_7, ...
      [], ...
      1/6*phi_2 + 137/180*phi_3 + 15/8*phi_4 + 17/6*phi_5 + 5/2*phi_6 + phi_7; ...
      one, [], []; ...
       [], [], []; ...
       [], [], []; ...
       [], [], []; ...
       [], [], [] };

c = [ 0; 1; 1 ];
